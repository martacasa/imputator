[tool.poetry]
name = "claimer"
version = "1.0.0"
description = "Jira claimer"
authors = ["martacasa <marta.casa@makingscience.com>"]
license = "MIT license"
repository = "https://github.com/martacasa/imputator"
readme = "README.md"
keywords = ["jira", "claimer"]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
]

[tool.poetry.dependencies]
python = "^3.8.1"
click = "^8.1.3"
jira = "^3.5.0"
google-api-python-client = "^2.87.0"
google-auth-oauthlib = "^1.0.0"
colorama = "^0.4.6"
arrow = "^1.2.3"
pytz = "^2023.3"

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
coverage = "^7.2.6"
flake8 = "^6.0.0"
pytest = "^7.3.1"
black = "^23.3.0"
pre-commit = "^3.3.2"

[tool.black]
line-length = 99
target-version = ['py310']
skip-string-normalization = true
include = '\.pyi?$'
force-exclude = '''
(
\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
| \/migrations\/
)
'''

[tool.commitizen]
version = "0.2.0"
version_files = [
  "__version__.py",
]

[tool.docformatter]
wrap-summaries=72
in-place=true

[tool.flake8]
max-doc-length = 99
max-line-length = 99
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__",
    # This contains our built documentation
    "docs/*",
    "*/migrations/*"
    # TODO: Add new directories that we don't want to check, for example: database migrations.
]
count = true

[tool.isort]
profile = "black"
# TODO: Add new local application/library package.
known_first_party = ["claimer"]
sections = ["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
line_length = 99
combine_as_imports = true
# TODO: Add new directories that we don't want to check, for example: database migrations.
skip_glob = ["*/migrations/*"]

[tool.coverage.paths]
source = ["claimer"]

[tool.coverage.run]
branch = false
source = ["claimer"]
omit = ["*__init__*", "*test*"]

[tool.coverage.report]
show_missing = true
fail_under = 40
ignore_errors = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
jira-claimer = 'claimer.cli:cli'
